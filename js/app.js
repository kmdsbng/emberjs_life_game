// Generated by CoffeeScript 1.3.3
var App, i, nextGeneration, _i;

App = Ember.Application.create();

App.Row = Ember.ArrayController.extend({
  cells: []
});

App.lifes = Ember.ArrayController.create({
  content: [],
  getCell: (function(x, y) {
    return this.get('content')[y * 10 + x];
  }),
  rows: (function() {
    var cell, cur, result, _i, _len, _ref;
    result = [];
    cur = App.Row.create({
      cells: []
    });
    _ref = this.get('content');
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      cell = _ref[_i];
      cur.get('cells').push(cell);
      if (cur.get('cells').length === 10) {
        result.push(cur);
        cur = App.Row.create({
          cells: []
        });
      }
    }
    return result;
  }).property('content'),
  getNearbyCells: (function(x, y) {
    return [this.getCell(x - 1, y - 1), this.getCell(x - 0, y - 1), this.getCell(x + 1, y - 1), this.getCell(x - 1, y - 0), this.getCell(x + 1, y - 0), this.getCell(x - 1, y + 1), this.getCell(x - 0, y + 1), this.getCell(x + 1, y + 1)];
  })
});

App.Life = Ember.Controller.extend({
  lifesBinding: 'App.lifes',
  state: (function() {
    if (this.get('isLive')) {
      return '■';
    } else {
      return '□';
    }
  }).property('isLive'),
  cur: 0,
  next: (function() {
    var nearbyCells, sum;
    nearbyCells = this.get('lifes').getNearbyCells(this.get('x'), this.get('y'));
    sum = nearbyCells.without(void 0).getEach('cur').reduce(function(m, v) {
      return m + v;
    });
    if (this.get('isLive')) {
      if (sum === 2 || sum === 3) {
        return 1;
      } else {
        return 0;
      }
    } else {
      if (sum === 3) {
        return 1;
      } else {
        return 0;
      }
    }
  }).property('lifes.@each.cur'),
  tmp: null,
  prepare: (function() {
    return this.set('tmp', this.get('next'));
  }),
  goNext: (function() {
    return this.set('cur', this.get('tmp'));
  }),
  flip: (function() {
    if (this.get('isLive')) {
      return this.set('cur', 0);
    } else {
      return this.set('cur', 1);
    }
  }),
  isLive: (function() {
    return this.get('cur') === 1;
  }).property('cur')
});

App.ApplicationView = Ember.View.extend();

App.LifeCanvasView = Ember.View.extend({
  templateName: 'life_canvas',
  lifesBinding: 'App.lifes.content',
  rowsBinding: 'App.lifes.rows'
});

for (i = _i = 0; _i <= 99; i = ++_i) {
  App.lifes.content.pushObject(App.Life.create({
    x: i % 10,
    y: Math.floor(i / 10)
  }));
}

App.lifes.getCell(3, 4).flip();

App.lifes.getCell(4, 4).flip();

App.lifes.getCell(5, 4).flip();

App.lifes.getCell(3, 5).flip();

App.lifes.getCell(4, 6).flip();

nextGeneration = (function() {
  App.lifes.content.invoke('prepare');
  return App.lifes.content.invoke('goNext');
});

setInterval((function() {
  return nextGeneration();
}), 1000);
